// <auto-generated />
using System;
using HastaneRandevuSistemi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HastaneRandevuSistemi.Migrations
{
    [DbContext(typeof(MasterContext))]
    [Migration("20200429201008_RandevuDB")]
    partial class RandevuDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HastaneRandevuSistemi.Models.EFCore.Hasta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Isim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyisim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TckNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hasta");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.EFCore.Hastane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HastaneAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KlinikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KlinikId");

                    b.ToTable("Hastane");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.EFCore.Hekim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Isim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PolikinlikId")
                        .HasColumnType("int");

                    b.Property<string>("Sifre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyisim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TckNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PolikinlikId");

                    b.ToTable("Hekim");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.EFCore.Klinik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KlinikAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SehirId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SehirId");

                    b.ToTable("Klinik");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.EFCore.Polikinlik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HastaneId")
                        .HasColumnType("int");

                    b.Property<string>("PolikinlikAdi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HastaneId");

                    b.ToTable("Polikinlik");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.EFCore.Randevu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Baslangic")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Bitis")
                        .HasColumnType("datetime2");

                    b.Property<int>("HastaId")
                        .HasColumnType("int");

                    b.Property<int>("HekimId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HastaId");

                    b.HasIndex("HekimId");

                    b.ToTable("Randevu");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.EFCore.Recete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ilac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RandevuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RandevuId")
                        .IsUnique();

                    b.ToTable("Recete");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.EFCore.Sehir", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SehirAdi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sehir");
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.EFCore.Hastane", b =>
                {
                    b.HasOne("HastaneRandevuSistemi.Models.EFCore.Klinik", "klinik")
                        .WithMany("Hastaneler")
                        .HasForeignKey("KlinikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.EFCore.Hekim", b =>
                {
                    b.HasOne("HastaneRandevuSistemi.Models.EFCore.Polikinlik", "polikinlik")
                        .WithMany("Hekimler")
                        .HasForeignKey("PolikinlikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.EFCore.Klinik", b =>
                {
                    b.HasOne("HastaneRandevuSistemi.Models.EFCore.Sehir", "sehir")
                        .WithMany("Klinikler")
                        .HasForeignKey("SehirId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.EFCore.Polikinlik", b =>
                {
                    b.HasOne("HastaneRandevuSistemi.Models.EFCore.Hastane", "hastane")
                        .WithMany("Polikinlikler")
                        .HasForeignKey("HastaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.EFCore.Randevu", b =>
                {
                    b.HasOne("HastaneRandevuSistemi.Models.EFCore.Hasta", "hasta")
                        .WithMany("Randevular")
                        .HasForeignKey("HastaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HastaneRandevuSistemi.Models.EFCore.Hekim", "hekim")
                        .WithMany("Randevular")
                        .HasForeignKey("HekimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HastaneRandevuSistemi.Models.EFCore.Recete", b =>
                {
                    b.HasOne("HastaneRandevuSistemi.Models.EFCore.Randevu", "Randevu")
                        .WithOne("Recete")
                        .HasForeignKey("HastaneRandevuSistemi.Models.EFCore.Recete", "RandevuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
